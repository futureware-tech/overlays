name: ci

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "*.*"

env:
  # https://docs.fastlane.tools/getting-started/ios/setup/#set-up-environment-variables
  LC_ALL: en_US.UTF-8
  LANG: en_US.UTF-8

jobs:
  build:
    runs-on: [self-hosted, macOS]
    strategy:
      fail-fast: false
      matrix:
        device:
          # Flutter only supports 64-bit simulators:
          # https://flutter.dev/docs/get-started/install/macos.
          - "iPhone 8"
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    steps:
      - uses: futureware-tech/simulator-action@v1
        with:
          model: ${{ matrix.device }}

      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "1.8"
      - name: "Install dependencies"
        working-directory: flutter
        run: |
          gem install bundler --no-doc
          bundle install
          export FLUTTER_ROOT="${{ runner.tool_cache }}/flutter"
          # Why do we need FLUTTER_ROOT?!
          echo "FLUTTER_ROOT=${FLUTTER_ROOT?}" >> "${GITHUB_ENV?}"
          echo "${FLUTTER_ROOT?}/bin" >> "${GITHUB_PATH?}"
          export ANDROID_SDK_ROOT="${{ runner.tool_cache }}/Android/Sdk"
          echo "ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT?}" >> "${GITHUB_ENV?}"
          bundle exec fastlane install_dependencies
          bundle exec fastlane install_ci_keys

      - name: "Generate and lint"
        working-directory: flutter
        run: |
          bundle exec fastlane generate
          bundle exec fastlane lint

      - name: "Check that all files were properly formatted and generated"
        run: bundle exec fastlane run ensure_git_status_clean show_diff:true

      - name: "Run tests"
        working-directory: flutter
        run: bundle exec fastlane run flutter args:test,--coverage

      - uses: codecov/codecov-action@v1

      - name: "Run driver tests"
        working-directory: flutter
        run: |
          bundle exec pod repo update
          flutter drive --target test_driver/main.dart

      - name: "Check that no source files were modified during build"
        run: bundle exec fastlane run ensure_git_status_clean show_diff:true

  deploy:
    if: >
      (
        github.ref == 'refs/heads/master' ||
        startsWith(github.ref, 'refs/tags/')
      ) &&
      github.event_name == 'push'
    needs: build
    runs-on: [self-hosted, macOS]
    env:
      CLOUDSDK_CORE_DISABLE_PROMPTS: 1
      MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
      FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
      FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          # Need history for build number etc.
          fetch-depth: 0

      - uses: google-github-actions/setup-gcloud@master
      - name: "Delete previously cached GCloud configuration"
        run: rm -rf "${HOME?}/.config/gcloud"

      - name: "Set deploy vars"
        run: |
          GCLOUD_ACCOUNT="${{ runner.temp }}/gcloud-service-account.json"

          echo "GOOGLE_APPLICATION_CREDENTIALS=${GCLOUD_ACCOUNT?}" >> \
            "${GITHUB_ENV?}"

          echo "SUPPLY_JSON_KEY=${GCLOUD_ACCOUNT?}" >> "${GITHUB_ENV?}"

          echo "ANDROID_KEYSTORE_PATH=${{ runner.temp }}/upload.keystore" >> \
            "${GITHUB_ENV?}"

          export ANDROID_SDK_ROOT="${{ runner.tool_cache }}/Android/Sdk"
          echo "ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT?}" >> "${GITHUB_ENV?}"

      - name: "Set deploy keys"
        run: |
          echo '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_DATA }}' | \
            base64 -d > "${GOOGLE_APPLICATION_CREDENTIALS?}"

          # We use gcloud to access source repository, and the environment
          # variable is also later consumed by ???.
          gcloud auth activate-service-account \
            --key-file "${GOOGLE_APPLICATION_CREDENTIALS?}"

          echo '${{ secrets.ANDROID_KEYSTORE_DATA }}' | \
            base64 -d > "${ANDROID_KEYSTORE_PATH?}"

          # Don't allow OSX to cache credentials. Confirm with:
          # $ git config --show-origin --get credential.helper
          git config --global credential.helper ''

          git config --global \
            credential.https://source.developers.google.com.helper \
            gcloud.sh

      - name: "Configure Flutter"
        run: |
          export FLUTTER_ROOT="${{ runner.tool_cache }}/flutter"
          # Why do we need FLUTTER_ROOT?!
          echo "FLUTTER_ROOT=${FLUTTER_ROOT?}" >> "${GITHUB_ENV?}"
          echo "${FLUTTER_ROOT?}/bin" >> "${GITHUB_PATH?}"

      - name: "Deploy iOS App"
        working-directory: flutter
        run: >
          bundle exec fastlane ios publish
          release:$(sed -n -e 's|^refs/tags/||p' <<<$GITHUB_REF)

      - uses: actions/setup-java@v1
        with:
          java-version: "1.8"

      - name: "Deploy Android App"
        working-directory: flutter
        run: >
          bundle exec fastlane android publish
          release:$(sed -n -e 's|^refs/tags/||p' <<<$GITHUB_REF)

      - name: "Check that files were not changed during release builds"
        run: bundle exec fastlane run ensure_git_status_clean show_diff:true
