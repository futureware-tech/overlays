name: flutter drive

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "*.*"

jobs:
  test:
    # Don't clutter up CI project with tests from other repos.
    if: startsWith(github.repository, 'futureware-tech/')
    strategy:
      fail-fast: false
      matrix:
        device:
          # Flutter only supports 64-bit simulators:
          # https://flutter.dev/docs/get-started/install/macos.
          - "iPhone 8"
          - "iPhone 11 Pro Max"
          - "iPad Pro (12.9-inch) (4th generation)"
    runs-on: macOS-latest
    env:
      FLUTTER_ROOT: /tmp/flutter
    steps:
      - name: "Print a list of simulators and start one"
        run: |
          echo 'Looking for specified device in the following list:'
          DEVICES=$(xcrun simctl list devices available)
          echo "$DEVICES"
          SIMULATOR_UDID=$(grep -F ' ${{ matrix.device }} (' \
              <<<"${DEVICES?}" | \
              awk -F '[()]' '{ print $(NF-3) }')
          echo '
            If the following command fails, update the matrix -> device in
            GitHub Actions workflow configuration (.yml file) to match one of
            the existing devices listed above. This usually happens when GitHub
            Actions OS X environment gets updated and is missing runtime
            profile, which requires an Apple account credentials to download.
          '
          xcrun simctl boot "${SIMULATOR_UDID?}"
      - uses: actions/checkout@v1
      - name: "Install dependencies"
        run: |
          bundle install --deployment
          cd flutter
          bundle exec fastlane install_dependencies
          bundle exec fastlane install_ci_keys
      - name: "Pre-build app to unclutter test output"
        working-directory: flutter
        run: bundle exec fastlane ios build

      - name: "Build and run tests (default error reporting environment)"
        if: github.event_name == 'pull_request'
        working-directory: flutter
        run: >
          "${FLUTTER_ROOT?}/bin/flutter" drive
          --target test_driver/main.dart

      - name: "Build and run tests (ci error reporting environment)"
        if: github.event_name == 'push'
        working-directory: flutter
        run: >
          "${FLUTTER_ROOT?}/bin/flutter" drive
          --dart-define sentry.environment=ci
          --target test_driver/main.dart
