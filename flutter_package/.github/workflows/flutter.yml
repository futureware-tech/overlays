name: flutter

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "*.*"

jobs:
  check:
    runs-on: ${{
      github.event.repository.private &&
      fromJSON('["self-hosted", "macOS"]') ||
      'ubuntu-latest'
      }}
    outputs:
      check_os: ${{ steps.determine_check_os.outputs.os_list }}
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: stable
      - run: flutter format .
      - name: "Check that there are no changes after formatting"
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo Working directory not clean after formatting. Please apply the
            echo following changes:
            git diff
            false
          fi
      - run: flutter analyze
      - run: flutter test --coverage
      - uses: codecov/codecov-action@v1

      - name: "Read pubspec.yaml"
        id: pubspec
        run: >
          ruby -ryaml -e
          '
          print "::set-output name=publish_to::",
          YAML.load_file("pubspec.yaml")["publish_to"]
          '
      - name: "Validate the package for publishing"
        run: flutter packages pub publish --dry-run
        if: steps.pubspec.outputs.publish_to != 'none'

      - name: "Determine OS to test the package on"
        id: determine_check_os
        run: |
          check_os='"ubuntu-latest"'
          if [ -e ios ]; then
            check_os+=',"macOS-latest"'
          fi
          if [ -e android ]; then
            check_os+=',"windows-latest"'
          fi
          echo "::set-output name=os_list::[${check_os}]"

  build:
    needs: check
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(needs.check.outputs.check_os) }}
        flutter_channel: [beta, stable]
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ matrix.flutter_channel }}

      - working-directory: example
        run: >
          flutter build
          ${{ runner.os == 'macOS' && 'ios --no-codesign' || 'apk' }}
          --debug
